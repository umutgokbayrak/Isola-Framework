package isola.model.core;/** *  * A Class representing a Javascript function. * If isCode boolean is set the value is a javascript code * is isCode is false then the value will be treated as a * javascript function name *  * @author Umut Gokbayrak */public class JsFunction implements JsVariable {	private String value;	private int type;	public static final int ANONYMOUS = 1;	public static final int CODE = 2;	public static final int FUNCTION = 3;		public JsFunction() {		super();	}		public JsFunction(String str) {		if (str != null) {			str = str.trim();			if (str.startsWith("function")) {				type = ANONYMOUS;			}			if (str.endsWith(";")) {				type = ANONYMOUS;				value = "function() {" + str + "}";			} else {				type = CODE;				value = str;			}		}	}		public JsFunction(int type) {		super();		this.type = type;	}		public JsFunction(int type, String value) {		super();		this.type = type;		this.value = value;	}		@Override	public String toString() {		switch (type) {		case ANONYMOUS:			String tmp = value.trim();			if (!tmp.startsWith("function")) {				tmp = "function() {" + tmp + "}";			}			if (tmp.endsWith(",")) {				return tmp.substring(0, tmp.length() - 1);			}			return tmp;		case FUNCTION:			return value.replaceAll("[();]", "").trim();		default:			return value.trim();		}	}		public String getValue() {		return value;	}		public void setValue(String value) {		this.value = value;	}		public int getType() {		return type;	}		public void setType(int type) {		this.type = type;	}}