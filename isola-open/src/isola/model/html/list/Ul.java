package isola.model.html.list;import isola.helpers.ElementParserHtml;import isola.model.html.core.Container;/** *  *  *  * Umut Gokbayrak */public class Ul extends Container {	private static final String tag = "ul";	/**	 * 	 * @deprecated When set, this boolean attribute gives a hint to visual user	 *             agents to	 * 	 *             render the list in a more compact way. The interpretation of	 *             this attribute	 * 	 *             depends on the user agent.	 */	private String compact;	/**	 * 	 * @deprecated This attribute sets the style of a list item. Currently	 *             available values	 * 	 *             are intended for visual user agents. Possible values are	 *             described below	 * 	 *             (along with case information).	 */	private String type;		public Ul() {		super();		setId(tag + (Math.random() * 1000));	}		public Ul(String id) {		super(id);	}		public String getCompact() {		return compact;	}		/**	 * 	 * @deprecated When set, this boolean attribute gives a hint to visual user	 *             agents to	 * 	 *             render the list in a more compact way. The interpretation of	 *             this attribute	 * 	 *             depends on the user agent.	 * 	 * 	 * 	 * @param compact	 */	public void setCompact(String compact) {		this.compact = compact;	}		public String getType() {		return type;	}		/**	 * 	 * @deprecated This attribute sets the style of a list item. Currently	 *             available values	 * 	 *             are intended for visual user agents. Possible values are	 *             described below	 * 	 *             (along with case information).	 * 	 * 	 * 	 * @param type	 */	public void setType(String type) {		this.type = type;	}		@Override	public String toString() {		return ElementParserHtml.getToStringOut(this);	}		public String getTag() {		return tag;	}}