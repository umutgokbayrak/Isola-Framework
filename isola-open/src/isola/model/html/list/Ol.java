package isola.model.html.list;import isola.helpers.ElementParserHtml;import isola.model.html.core.Container;/** *  *  *  * @author Umut Gokbayrak *  *  */public class Ol extends Container {	private static final String tag = "ol";	/**	 * 	 * @deprecated When set, this boolean attribute gives a hint to visual user	 *             agents to render	 * 	 *             the list in a more compact way. The interpretation of this	 *             attribute depends	 * 	 *             on the user agent.	 */	private String compact;	/**	 * 	 * @deprecated For OL only. This attribute specifies the starting number of	 *             the first item in	 * 	 *             an ordered list. The default starting number is "1". Note	 *             that while the value	 * 	 *             of this attribute is an integer, the corresponding label may	 *             be non-numeric.	 * 	 *             Thus, when the list item style is uppercase latin letters (A,	 *             B, C, ...), start=3	 * 	 *             means "C". When the style is lowercase roman numerals,	 *             start=3 means "iii",	 * 	 *             etc.	 */	private String start;	/**	 * 	 * @deprecated This attribute sets the style of a list item. Currently	 *             available values are	 * 	 *             intended for visual user agents. Possible values are	 *             described below (along	 * 	 *             with case information).	 */	private String type;		public String getCompact() {		return compact;	}		/**	 * 	 * @deprecated When set, this boolean attribute gives a hint to visual user	 *             agents to render	 * 	 *             the list in a more compact way. The interpretation of this	 *             attribute depends	 * 	 *             on the user agent.	 * 	 * 	 * 	 * @param compact	 */	public void setCompact(String compact) {		this.compact = compact;	}		public Ol() {		super();		setId(tag + (Math.random() * 1000));	}		public Ol(String id) {		super(id);	}		public String getStart() {		return start;	}		/**	 * 	 * @deprecated For OL only. This attribute specifies the starting number of	 *             the first item in	 * 	 *             an ordered list. The default starting number is "1". Note	 *             that while the value	 * 	 *             of this attribute is an integer, the corresponding label may	 *             be non-numeric.	 * 	 *             Thus, when the list item style is uppercase latin letters (A,	 *             B, C, ...), start=3	 * 	 *             means "C". When the style is lowercase roman numerals,	 *             start=3 means "iii",	 * 	 *             etc.	 * 	 * 	 * 	 * @param start	 */	public void setStart(String start) {		this.start = start;	}		public String getType() {		return type;	}		/**	 * 	 * @deprecated This attribute sets the style of a list item. Currently	 *             available values are	 * 	 *             intended for visual user agents. Possible values are	 *             described below (along	 * 	 *             with case information).	 * 	 * 	 * 	 * @param type	 */	public void setType(String type) {		this.type = type;	}		@Override	public String toString() {		return ElementParserHtml.getToStringOut(this);	}		public String getTag() {		return tag;	}}