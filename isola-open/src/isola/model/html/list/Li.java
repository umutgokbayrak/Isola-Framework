package isola.model.html.list;import isola.helpers.ElementParserHtml;import isola.model.html.core.Container;/** *  *  *  * @author Umut Gokbayrak *  *  */public class Li extends Container {	private static final String tag = "li";	/**	 * 	 * @deprecated This attribute sets the style of a list item. Currently	 *             available values	 * 	 *             are intended for visual user agents. Possible values are	 *             described below	 * 	 *             (along with case information).	 */	private String type;	/**	 * 	 * @deprecated For LI only. This attribute sets the number of the current	 *             list item.	 * 	 *             Note that while the value of this attribute is an integer,	 *             the	 * 	 *             corresponding label may be non-numeric (see the start	 *             attribute).	 */	private String value;		public Li() {		super();		setId(tag + (Math.random() * 1000));	}		public Li(String id) {		super(id);	}		public String getType() {		return type;	}		/**	 * 	 * @deprecated This attribute sets the style of a list item. Currently	 *             available values	 * 	 *             are intended for visual user agents. Possible values are	 *             described below	 * 	 *             (along with case information).	 * 	 * 	 * 	 * @param type	 */	public void setType(String type) {		this.type = type;	}		public String getValue() {		return value;	}		/**	 * 	 * @deprecated For LI only. This attribute sets the number of the current	 *             list item.	 * 	 *             Note that while the value of this attribute is an integer,	 *             the	 * 	 *             corresponding label may be non-numeric (see the start	 *             attribute).	 * 	 * 	 * 	 * @param value	 */	public void setValue(String value) {		this.value = value;	}		@Override	public String toString() {		return ElementParserHtml.getToStringOut(this);	}		public String getTag() {		return tag;	}}