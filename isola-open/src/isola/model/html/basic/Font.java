package isola.model.html.basic;import isola.helpers.ElementParserHtml;import isola.model.html.core.Container;/** *  *  *  * @author Umut Gokbayrak *  *  */public class Font extends Container {	private static final String tag = "font";	/**	 * 	 * @deprecated This attribute sets the text color.	 */	private String color;	/**	 * 	 * @deprecated This attribute defines a comma-separated list of font names	 *             the user agent should search for in order of preference.	 */	private String face;	/**	 * 	 * @deprecated This attribute sets the size of the font. Possible values:	 * 	 *             <ul>	 * 	 *             <li>An integer between 1 and 7. This sets the font to some	 *             fixed size, whose rendering	 * 	 *             depends on the user agent. Not all user agents may render all	 *             seven sizes.</li>	 * 	 *             <li>A relative increase in font size. The value "+1" means	 *             one size larger. The value "-3"	 * 	 *             means three sizes smaller. All sizes belong to the scale of 1	 *             to 7.</li>	 * 	 *             </ul>	 */	private String size;		public Font() {		super();		setId(tag + (Math.random() * 1000));	}		public Font(String id) {		super(id);	}		@Override	public String toString() {		return ElementParserHtml.getToStringOut(this);	}		public String getTag() {		return tag;	}		public String getColor() {		return color;	}		/**	 * 	 * @deprecated This attribute sets the text color.	 * 	 * 	 * 	 * @param color	 */	public void setColor(String color) {		this.color = color;	}		public String getFace() {		return face;	}		/**	 * 	 * @deprecated This attribute defines a comma-separated list of font names	 *             the user agent should search for in order of preference.	 * 	 * 	 * 	 * @param face	 */	public void setFace(String face) {		this.face = face;	}		public String getSize() {		return size;	}		/**	 * 	 * @deprecated This attribute sets the size of the font. Possible values:	 * 	 *             <ul>	 * 	 *             <li>An integer between 1 and 7. This sets the font to some	 *             fixed size, whose rendering	 * 	 *             depends on the user agent. Not all user agents may render all	 *             seven sizes.</li>	 * 	 *             <li>A relative increase in font size. The value "+1" means	 *             one size larger. The value "-3"	 * 	 *             means three sizes smaller. All sizes belong to the scale of 1	 *             to 7.</li>	 * 	 *             </ul>	 * 	 * 	 * 	 * @param size	 */	public void setSize(String size) {		this.size = size;	}}