package isola.model.html.basic;import isola.constants.MimeTypes;import isola.helpers.ElementParserHtml;import isola.model.html.core.Element;/** *  *  *  * @author Umut Gokbayrak *  *  */public class Script extends Element {	private static final String tag = "script";		/**	 * 	 * Default constructor	 */	public Script() {		super();	}		/**	 * 	 * Constructor with default mime type predefined.	 * 	 * @see MimeTypes	 * 	 * @param type	 */	public Script(String mimeType) {		super();		this.type = mimeType;	}		public Script(String mimeType, String src) {		super();		this.type = mimeType;		this.src = src;	}		/**	 * 	 * This attribute specifies the character encoding of the resource	 * designated by the link.	 */	private String charset;	/**	 * 	 * When set, this boolean attribute provides a hint to the user agent that	 * the script is	 * 	 * not going to generate any document content (e.g., no "document.write" in	 * javascript)	 * 	 * and thus, the user agent can continue parsing and rendering.	 */	private String defer;	/**	 * 	 * @deprecated This attribute specifies the scripting language of the	 *             contents of this element.	 * 	 *             Its value is an identifier for the language, but since these	 *             identifiers are not standard,	 * 	 *             this attribute has been deprecated in favor of type.	 */	private String language;	/**	 * 	 * This attribute specifies the location of an external script.	 */	private String src;	/**	 * 	 * This attribute specifies the scripting language of the element's contents	 * and overrides	 * 	 * the default scripting language. The scripting language is specified as a	 * content type	 * 	 * (e.g., "text/javascript"). Authors must supply a value for this	 * attribute. There is no	 * 	 * default value for this attribute.	 * 	 * 	 * 	 * @see MimeTypes	 */	private String type;		public String getCharset() {		return charset;	}		/**	 * 	 * This attribute specifies the character encoding of the resource	 * designated by the link.	 * 	 * 	 * 	 * @param charset	 */	public void setCharset(String charset) {		this.charset = charset;	}		public String getDefer() {		return defer;	}		/**	 * 	 * When set, this boolean attribute provides a hint to the user agent that	 * the script is	 * 	 * not going to generate any document content (e.g., no "document.write" in	 * javascript)	 * 	 * and thus, the user agent can continue parsing and rendering.	 * 	 * 	 * 	 * @param defer	 */	public void setDefer(String defer) {		this.defer = defer;	}		public String getLanguage() {		return language;	}		/**	 * 	 * @deprecated This attribute specifies the scripting language of the	 *             contents of this element.	 * 	 *             Its value is an identifier for the language, but since these	 *             identifiers are not standard,	 * 	 *             this attribute has been deprecated in favor of type.	 * 	 * 	 * 	 * @param language	 */	public void setLanguage(String language) {		this.language = language;	}		public String getSrc() {		return src;	}		/**	 * 	 * This attribute specifies the location of an external script.	 * 	 * 	 * 	 * @param src	 */	public void setSrc(String src) {		this.src = src;	}		public String getType() {		return type;	}		/**	 * 	 * This attribute specifies the scripting language of the element's contents	 * and overrides	 * 	 * the default scripting language. The scripting language is specified as a	 * content type	 * 	 * (e.g., "text/javascript"). Authors must supply a value for this	 * attribute. There is no	 * 	 * default value for this attribute.	 * 	 * 	 * 	 * @see MimeTypes	 * 	 * @param type	 */	public void setType(String type) {		this.type = type;	}		@Override	public String toString() {		return ElementParserHtml.getToStringOut(this);	}		public String getTag() {		return tag;	}}