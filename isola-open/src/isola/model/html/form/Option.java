package isola.model.html.form;import isola.helpers.ElementParserHtml;import isola.model.html.core.Container;import isola.model.html.core.TextNode;/** *  *  *  * @author Umut Gokbayrak *  *  */public class Option extends Container {	private static final String tag = "option";	/**	 * 	 * When set for a form control, this boolean attribute disables the control	 * for user input.	 */	private String disabled;	/**	 * 	 * This attribute allows authors to specify a shorter label for an option	 * than the content	 * 	 * of the OPTION element. When specified, user agents should use the value	 * of this attribute	 * 	 * rather than the content of the OPTION element as the option label.	 */	private String label;	/**	 * 	 * When set, this boolean attribute specifies that this option is	 * pre-selected.	 */	private String selected;	/**	 * 	 * This attribute specifies the initial value of the control. If this	 * attribute is	 * 	 * not set, the initial value is set to the contents of the OPTION element.	 */	private String value;		public Option() {		super();	}		public Option(String id) {		super(id);	}		public Option(String label, String value) {		super();		addChild(new TextNode(label));		setValue(value);	}		public String getDisabled() {		return disabled;	}		/**	 * 	 * When set for a form control, this boolean attribute disables the control	 * for user input.	 * 	 * 	 * 	 * @param disabled	 */	public void setDisabled(String disabled) {		this.disabled = disabled;	}		public String getLabel() {		return label;	}		/**	 * 	 * This attribute allows authors to specify a shorter label for an option	 * than the content	 * 	 * of the OPTION element. When specified, user agents should use the value	 * of this attribute	 * 	 * rather than the content of the OPTION element as the option label.	 * 	 * 	 * 	 * @param label	 */	public void setLabel(String label) {		this.label = label;	}		public String getSelected() {		return selected;	}		/**	 * 	 * When set, this boolean attribute specifies that this option is	 * pre-selected.	 * 	 * 	 * 	 * @param selected	 */	public void setSelected(String selected) {		this.selected = selected;	}		public String getValue() {		return value;	}		/**	 * 	 * This attribute specifies the initial value of the control. If this	 * attribute is	 * 	 * not set, the initial value is set to the contents of the OPTION element.	 * 	 * 	 * 	 * @param value	 */	public void setValue(String value) {		this.value = value;	}		@Override	public String toString() {		return ElementParserHtml.getToStringOut(this);	}		public String getTag() {		return tag;	}}