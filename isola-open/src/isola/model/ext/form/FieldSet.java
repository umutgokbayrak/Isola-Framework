package isola.model.ext.form;import isola.helpers.JsHelper;import isola.model.ext.constants.XTypes;import isola.model.ext.container.Panel;/** *  * Standard container used for grouping form fields. *  *  *  * @author Umut Gokbayrak */public class FieldSet extends Panel {	private static final long serialVersionUID = 1247206046010874160L;	private static final String TAG = "Ext.form.FieldSet";	/**	 * 	 * The base CSS class applied to the fieldset (defaults to 'x-fieldset').	 */	public String baseCls;	/**	 * 	 * The name to assign to the fieldset's checkbox if checkboxToggle = true	 * (defaults to	 * 	 * '[checkbox id]-checkbox').	 */	public String checkboxName;	/**	 * 	 * True to render a checkbox into the fieldset frame just in front of the	 * legend, or a	 * 	 * DomHelper config object to create the checkbox. (defaults to false). The	 * fieldset will	 * 	 * be expanded or collapsed when the checkbox is toggled.	 */	public boolean checkboxToggle = false;	/**	 * 	 * A css class to apply to the x-form-item of fields. This property cascades	 * to child containers.	 */	public String itemCls;	/**	 * 	 * The width of labels. This property cascades to child containers.	 */	public int labelWidth = 0;	/**	 * 	 * The Ext.Container.layout to use inside the fieldset (defaults to 'form').	 */	public String layout;		public FieldSet() {		super();	}		/**	 * 	 * <p>	 * The registered xtype to create. This config option is not used when	 * passing a	 * 	 * config object into a constructor. This config option is used only when	 * lazy	 * 	 * instantiation is being used, and a child item of a Container is being	 * 	 * specified not as a fully instantiated Component, but as a Component	 * config	 * 	 * object. The xtype will be looked up at render time up to determine what	 * 	 * type of child Component to create.	 * </p>	 * 	 * 	 * 	 * @see XTypes <p>	 *      If you subclass Components to create your own Components, you may	 *      register	 * 	 *      them using Ext.ComponentMgr.registerType in order to be able to take	 *      advantage	 * 	 *      of lazy instantiation and rendering.	 *      </p>	 */	public String xtype = XTypes.fieldset;		@Override	protected void _postProcessToString() {		super._postProcessToString();		if (baseCls != null)			put("baseCls", baseCls);		if (checkboxName != null)			put("checkboxName", checkboxName);		if (checkboxToggle)			put("checkboxToggle", checkboxToggle);		if (itemCls != null)			put("itemCls", itemCls);		if (labelWidth != 0)			put("labelWidth", labelWidth);		if (layout != null)			put("layout", layout);		if (xtype != null)			put("xtype", xtype);	}		@Override	public String toString() {		_postProcessToString();		return "new " + TAG + "(" + JsHelper.printJsObject(this) + ")";	}}