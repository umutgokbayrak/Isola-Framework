package isola.model.ext.form;import isola.helpers.JsHelper;import isola.model.ext.base.Component;import isola.model.ext.constants.XTypes;/** *  * Simple color palette class for choosing colors. The palette can be rendered * to any container. *  * Here's an example of typical usage: *  *  *  * <pre> * &lt;code&gt; * 
 *  * 
 * &lt;ext:body runOnLoad=&quot;true&quot;&gt; * 
 * 	 &lt;ext:colorPalette renderTo=&quot;color&quot;/&gt; * 
 * &lt;/ext:body&gt; * 
 *  * 
 * &lt;div id=&quot;color&quot;&gt;&lt;/div&gt; * 
 *  * 
 * &lt;/code&gt; * </pre> *  *  *  * @author Umut Gokbayrak */public class ColorPalette extends Component {	private static final long serialVersionUID = 2844201501526974477L;	private static final String TAG = "Ext.ColorPalette";	/**	 * 	 * If set to true then reselecting a color that is already selected fires	 * the	 * 	 * selection event	 */	public boolean allowReselect = false;	/**	 * 	 * The CSS class to apply to the containing element (defaults to	 * "x-color-palette")	 */	public String itemCls;	/**	 * 	 * An existing XTemplate instance to be used in place of the default	 * template for rendering the	 * 	 * component.	 */	public String tpl;	/**	 * 	 * The initial color to highlight (should be a valid 6-digit color hex code	 * without the #	 * 	 * symbol). Note that the hex codes are case-sensitive.	 */	public String value;	/**	 * 	 * <p>	 * The registered xtype to create. This config option is not used when	 * passing a	 * 	 * config object into a constructor. This config option is used only when	 * lazy	 * 	 * instantiation is being used, and a child item of a Container is being	 * 	 * specified not as a fully instantiated Component, but as a Component	 * config	 * 	 * object. The xtype will be looked up at render time up to determine what	 * 	 * type of child Component to create.	 * </p>	 * 	 * 	 * 	 * @see XTypes <p>	 *      If you subclass Components to create your own Components, you may	 *      register	 * 	 *      them using Ext.ComponentMgr.registerType in order to be able to take	 *      advantage	 * 	 *      of lazy instantiation and rendering.	 *      </p>	 */	public String xtype = XTypes.colorpalette;		public ColorPalette() {		super();	}		protected void _postProcessToString() {		super._postProcessToString();		if (allowReselect)			put("allowReselect", allowReselect);		if (xtype != null)			put("xtype", xtype);	}		@Override	public String toString() {		_postProcessToString();		return "new " + TAG + "(" + JsHelper.printJsObject(this) + ")";	}}