package isola.model.ext.tree;import isola.helpers.JsHelper;import isola.model.core.JsFunction;import isola.model.core.JsObject;/** *  * Provides sorting of nodes in a TreePanel *  *  *  * @author Umut Gokbayrak */public class TreeSorter extends JsObject {	private static final long serialVersionUID = -2410447737069336843L;	private static final String TAG = "Ext.tree.TreeSorter";	/**	 * 	 * true for case sensitive sort (defaults to false)	 */	public boolean caseSensitive = false;	/**	 * 	 * The direction to sort (asc or desc) (defaults to asc)	 */	public String dir;	/**	 * 	 * True to sort leaf nodes under non leaf nodes	 */	public boolean folderSort = false;	/**	 * 	 * The attribute used to determine leaf nodes in folder sort (defaults to	 * "leaf")	 */	public String leafAttr;	/**	 * 	 * The named attribute on the node to sort by (defaults to text)	 */	public String property;	/**	 * 	 * A custom "casting" function used to convert node values before sorting	 */	public JsFunction sortType;		public TreeSorter() {		super();	}		@Override	protected void _postProcessToString() {		super._postProcessToString();		if (caseSensitive)			put("caseSensitive", caseSensitive);		if (dir != null)			put("dir", dir);		if (folderSort)			put("folderSort", folderSort);		if (leafAttr != null)			put("leafAttr", leafAttr);		if (property != null)			put("property", property);		if (sortType != null)			put("sortType", sortType);	}		@Override	public String toString() {		_postProcessToString();		return "new " + TAG + "(" + JsHelper.printJsObject(this) + ")";	}}