package isola.model.ext.grid;import isola.helpers.JsHelper;import isola.model.core.JsArray;import isola.model.ext.base.Observable;/** *  * Places a search box and the buttons to one of the grid's toolbar (bottom or * top). *  * Default is the bottom toolbar. Please note that this plugin will not create a * toolbar. *  * You have to create it manually. *  *  *  * @author Umut Gokbayrak */public class GridSearchPlugin extends Observable {	private static final long serialVersionUID = 4194862916909865696L;	private static final String TAG = "Ext.ux.grid.Search";	/**	 * 	 * Text to display on menu button	 */	public String searchText;	/**	 * 	 * Text to display as input tooltip. Set to '' for no tooltip	 */	public String searchTipText;	/**	 * 	 * Text to display on menu item that selects all fields	 */	public String selectAllText;	/**	 * 	 * Where to display the search controls. Valid values are top and bottom	 * (defaults to bottom)	 * 	 * Corresponding toolbar has to exist at least with mimimum configuration	 * tbar:[] for position:top or bbar:[]	 * 	 * for position bottom. Plugin does NOT create any toolbar.	 */	public String position;	/**	 * 	 * Icon class for menu button (defaults to icon-magnifier)	 */	public String iconCls;	/**	 * 	 * Which indexes to check by default. Can be either 'all' for all indexes	 * 	 * or array of dataIndex names, e.g. ['persFirstName', 'persLastName']	 */	public JsArray checkIndexes;	/**	 * 	 * How to format date values. If undefined (the default)	 * 	 * date is formatted as configured in colummn model	 */	public String dateFormat;	/**	 * 	 * Select All item is shown in menu if true (defaults to true)	 */	public boolean showSelectAll = true;	/**	 * 	 * Use 'remote' for remote stores or 'local' for local stores. If mode is	 * local	 * 	 * no data requests are sent to server the grid's store is filtered instead	 * 	 * (defaults to 'remote')	 */	public String mode;	/**	 * 	 * Width of input field in pixels (defaults to 100)	 */	public int width = 100;	/**	 * 	 * xtype is usually not used to instantiate this plugin but you have a	 * chance to identify it.	 */	public static String xtype = "gridsearch";		public GridSearchPlugin() {		super();	}		@Override	public void clear() {		super.clear();		searchText = searchTipText = selectAllText = position = iconCls = mode = null;		checkIndexes = null;		dateFormat = null;		showSelectAll = true;		width = 100;	}		@Override	protected void _postProcessToString() {		super._postProcessToString();		if (searchText != null)			put("searchText", searchText);		if (searchTipText != null)			put("searchTipText", searchTipText);		if (selectAllText != null)			put("selectAllText", selectAllText);		if (position != null)			put("position", position);		if (iconCls != null)			put("iconCls", iconCls);		if (mode != null)			put("mode", mode);		if (checkIndexes != null && checkIndexes.size() > 0)			put("checkIndexes", checkIndexes);		if (dateFormat != null)			put("dateFormat", dateFormat);		if (!showSelectAll)			put("showSelectAll", showSelectAll);		if (width != 100)			put("width", width);		put("disableIndexes", new JsArray());		put("readonlyIndexes", new JsArray());	}		@Override	public String toString() {		_postProcessToString();		return "new " + TAG + "(" + JsHelper.printJsObject(this) + ")";	}}