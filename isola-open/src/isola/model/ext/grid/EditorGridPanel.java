package isola.model.ext.grid;import isola.helpers.JsHelper;import isola.model.ext.constants.XTypes;/** *  * Class for creating and editable grid. *  *  *  * @author Umut Gokbayrak */public class EditorGridPanel extends GridPanel {	private static final long serialVersionUID = -5246754832612778655L;	private static final String TAG = "Ext.grid.EditorGridPanel";	/**	 * 	 * True to automatically HTML encode and decode values pre and post edit	 * (defaults to false)	 */	public boolean autoEncode = false;	/**	 * 	 * The number of clicks on a cell required to display the cell's editor	 * (defaults to 2)	 */	public int clicksToEdit = 2;	/**	 * 	 * <p>	 * The registered xtype to create. This config option is not used when	 * passing a	 * 	 * config object into a constructor. This config option is used only when	 * lazy	 * 	 * instantiation is being used, and a child item of a Container is being	 * 	 * specified not as a fully instantiated Component, but as a Component	 * config	 * 	 * object. The xtype will be looked up at render time up to determine what	 * 	 * type of child Component to create.	 * </p>	 * 	 * 	 * 	 * @see XTypes <p>	 *      If you subclass Components to create your own Components, you may	 *      register	 * 	 *      them using Ext.ComponentMgr.registerType in order to be able to take	 *      advantage	 * 	 *      of lazy instantiation and rendering.	 *      </p>	 */	public String xtype = XTypes.editorgrid;		public EditorGridPanel() {		super();	}		@Override	protected void _postProcessToString() {		super._postProcessToString();		if (autoEncode)			put("autoEncode", autoEncode);		if (clicksToEdit != 2)			put("clicksToEdit", clicksToEdit);		if (xtype != null)			put("xtype", xtype);	}		@Override	public String toString() {		_postProcessToString();		return "new " + TAG + "(" + JsHelper.printJsObject(this) + ")";	}}