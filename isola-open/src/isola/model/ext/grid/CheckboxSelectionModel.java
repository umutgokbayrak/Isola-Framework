package isola.model.ext.grid;import isola.helpers.JsHelper;/** *  * A custom selection model that renders a column of checkboxes that can be * toggled to *  * select or deselect rows. *  *  *  * @author Umut Gokbayrak */public class CheckboxSelectionModel extends RowSelectionModel {	private static final long serialVersionUID = 5662359686510059568L;	private static final String TAG = "Ext.grid.CheckboxSelectionModel";	/**	 * 	 * Any valid text or HTML fragment to display in the header cell for the	 * checkbox column	 * 	 * (defaults to '<div class="x-grid3-hd-checker"> </div>'). The default CSS	 * class of	 * 	 * 'x-grid3-hd-checker' displays a checkbox in the header and provides	 * support for	 * 	 * automatic check all/none behavior on header click. This string can be	 * replaced by any	 * 	 * valid HTML fragment, including a simple text string (e.g., 'Select	 * Rows'), but the	 * 	 * automatic check all/none behavior will only work if the	 * 'x-grid3-hd-checker' class is	 * 	 * supplied.	 */	public String header;	/**	 * 	 * True if the checkbox column is sortable (defaults to false).	 */	public boolean sortable = false;	/**	 * 	 * The default width in pixels of the checkbox column (defaults to 20).	 */	public int width = 20;		public CheckboxSelectionModel() {		super();	}		@Override	protected void _postProcessToString() {		super._postProcessToString();		if (header != null)			put("header", header);		if (sortable)			put("sortable", sortable);		if (width != 20)			put("width", width);	}		@Override	public String toString() {		_postProcessToString();		return "new " + TAG + "(" + JsHelper.printJsObject(this) + ")";	}}