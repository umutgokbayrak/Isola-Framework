package isola.model.ext.menu;import isola.helpers.JsHelper;/** *  * A base class for all menu items that require menu-related functionality (like * sub-menus) and are not *  * static display items. Item extends the base functionality of * Ext.menu.BaseItem by adding menu-specific *  * activation and click handling. *  *  *  * @author Umut Gokbayrak *  *  */public class Item extends BaseItem {	private static final long serialVersionUID = 6922657045038770053L;	private static final String TAG = "Ext.menu.Item";	/**	 * 	 * True if this item can be visually activated (defaults to true)	 */	public boolean canActivate = true;	/**	 * 	 * The href attribute to use for the underlying anchor link (defaults to	 * '#').	 */	public String href;	/**	 * 	 * The target attribute to use for the underlying anchor link (defaults to	 * '').	 */	public String hrefTarget;	/**	 * 	 * The path to an icon to display in this item (defaults to	 * Ext.BLANK_IMAGE_URL). If icon is	 * 	 * specified iconCls should not be.	 */	public String icon;	/**	 * 	 * A CSS class that specifies a background image that will be used as the	 * icon for this item	 * 	 * (defaults to ''). If iconCls is specified icon should not be.	 */	public String iconCls;	/**	 * 	 * The default CSS class to use for menu items (defaults to 'x-menu-item')	 */	public String itemCls;	/**	 * 	 * Length of time in milliseconds to wait before showing this item (defaults	 * to 200)	 */	public int showDelay = 200;	/**	 * 	 * The text to display in this item (defaults to '').	 */	public String text;	/**	 * 	 * Submenu	 */	public Menu menu;		/**
	 * 
	 */	public Item() {		super();	}		@Override	protected void _postProcessToString() {		super._postProcessToString();		if (!canActivate)			put("canActivate", canActivate);		if (href != null)			put("href", href);		if (hrefTarget != null)			put("hrefTarget", hrefTarget);		if (icon != null)			put("icon", icon);		if (iconCls != null)			put("iconCls", iconCls);		if (itemCls != null)			put("itemCls", itemCls);		if (showDelay != 200)			put("showDelay", showDelay);		if (text != null)			put("text", text);		if (menu != null)			put("menu", menu);	}		@Override	public String toString() {		_postProcessToString();		return "new " + TAG + "(" + JsHelper.printJsObject(this) + ")";	}}