package isola.model.ext.menu;import isola.helpers.JsHelper;import isola.model.core.JsFunction;import isola.model.ext.base.Component;/** *  * The base class for all items that render into menus. BaseItem provides * default rendering, activated *  * state management and base configuration options shared by all menu * components. *  *  *  * @author Umut Gokbayrak */public class BaseItem extends Component {	private static final long serialVersionUID = 5860995091571622582L;	private static final String TAG = "Ext.menu.BaseItem";	/**	 * 	 * The CSS class to use when the item becomes activated (defaults to	 * "x-menu-item-active")	 */	public String activeClass;	/**	 * 	 * True if this item can be visually activated (defaults to false)	 */	public boolean canActivate = false;	/**	 * 	 * A function that will handle the click event of this menu item (defaults	 * to undefined)	 */	public JsFunction handler;	/**	 * 	 * Length of time in milliseconds to wait before hiding after a click	 * (defaults to 100)	 */	public int hideDelay = 100;	/**	 * 	 * True to hide the containing menu after this item is clicked (defaults to	 * true)	 */	public boolean hideOnClick = true;	/**	 * 	 * The scope in which the handler function will be called.	 */	public String scope;		public BaseItem() {		super();	}		@Override	protected void _postProcessToString() {		super._postProcessToString();		if (activeClass != null)			put("activeClass", activeClass);		if (canActivate)			put("canActivate", canActivate);		if (handler != null)			put("handler", handler);		if (hideDelay != 100)			put("hideDelay", hideDelay);		if (!hideOnClick)			put("hideOnClick", hideOnClick);		if (scope != null)			put("scope", scope);	}		@Override	public String toString() {		_postProcessToString();		return "new " + TAG + "(" + JsHelper.printJsObject(this) + ")";	}}