package isola.model.ext.data;import isola.helpers.JsHelper;/** *  * A specialized store implementation that provides for grouping records by one * of the *  * available fields. *  *  *  * @author Umut Gokbayrak */public class GroupingStore extends Store {	private static final long serialVersionUID = -4627596998566158414L;	private static final String TAG = "Ext.data.GroupingStore";	/**	 * 	 * The field name by which to sort the store's data (defaults to '').	 */	public String groupField;	/**	 * 	 * True to sort the data on the grouping field when a grouping operation	 * occurs,	 * 	 * false to sort based on the existing sort info (defaults to false).	 */	public boolean groupOnSort = false;	/**	 * 	 * True if the grouping should apply on the server side, false if it is	 * local only	 * 	 * (defaults to false). If the grouping is local, it can be applied	 * immediately to	 * 	 * the data. If it is remote, then it will simply act as a helper,	 * automatically	 * 	 * sending the grouping field name as the 'groupBy' param with each XHR	 * call.	 */	public boolean remoteGroup = false;		@Override	protected void _postProcessToString() {		super._postProcessToString();		if (groupField != null)			put("groupField", groupField);		if (groupOnSort)			put("groupOnSort", groupOnSort);		if (remoteGroup)			put("remoteGroup", remoteGroup);	}		@Override	public String toString() {		_postProcessToString();		return "new " + TAG + "(" + JsHelper.printJsObject(this) + ")";	}}