package isola.tags.ext.grid;import javax.servlet.jsp.JspException;import isola.model.core.JsArray;import isola.model.ext.grid.ColumnModel;import isola.tags.base.BaseTag;import isola.tags.ext.tree.ColumnTreeTag;/** *  * <p> * This is the default implementation of a ColumnModel used by the Grid. This * class is *  * initialized with an Array of column config objects. * </p> *  *  *  * @author Umut Gokbayrak */public class ColumnModelTag extends BaseTag {	private static final long serialVersionUID = -4011558795249328840L;	private JsArray columns;	private String rowExpander;	@Override	public int doEndTag() throws JspException {		if (rowExpander == null) {			if (getParent() instanceof GridPanelTag) {				GridPanelTag st = (GridPanelTag) getParent();				st.setColumns(columns);			} else if (getParent() instanceof ColumnTreeTag) {				ColumnTreeTag st = (ColumnTreeTag) getParent();				st.setColumns(columns);			}		} else if (rowExpander != null) {			if (getParent() instanceof GridPanelTag) {				ColumnModel cm = new ColumnModel();				cm.expander = rowExpander;				cm.columns = columns;				GridPanelTag st = (GridPanelTag) getParent();				if (st.getPlugins() == null || st.getPlugins().length() == 0) {	 				st.setPlugins(rowExpander);				} else {					st.setPlugins(st.getPlugins() + "," + rowExpander);				}				st.setColModel(cm);			}		}		clear();		return EVAL_PAGE;	}		@Override	protected void clear() {		columns = null;		rowExpander = null;	}		public JsArray getColumns() {		if (columns == null) {			columns = new JsArray();		}		return columns;	}		public void setColumns(JsArray columns) {		this.columns = columns;	}	public void setRowExpander(String rowExpander) {		this.rowExpander = rowExpander;	}}