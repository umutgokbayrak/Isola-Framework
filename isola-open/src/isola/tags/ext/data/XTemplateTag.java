package isola.tags.ext.data;import java.io.IOException;import javax.servlet.jsp.JspException;import isola.tags.base.BaseTag;import isola.tags.ext.container.DataViewTag;import isola.tags.ext.form.ColorPaletteTag;import isola.tags.ext.form.ComboBoxTag;import javolution.text.TextBuilder;/** *  * <p> * A template class that supports advanced functionality like autofilling * arrays, conditional *  * processing with basic comparison operators, sub-templates, basic math * function support, *  * special built-in template variables, inline code execution and more. * XTemplate also provides *  * the templating mechanism built into Ext.DataView. * </p> *  *  *  * @author Umut Gokbayrak */public class XTemplateTag extends BaseTag {	private static final long serialVersionUID = 3377403496850119095L;	private String id;		@Override	public int doEndTag() throws JspException {		TextBuilder tb = new TextBuilder();		tb.append("new Ext.XTemplate(");		tb.append("'").append(getBodyContent().getString().trim().replace("\n", "").replace("  ", "").replace("\t", "").replace("\r", "").replace("'", "\\'")).append("'");		tb.append(")");		// insert item to the parent storetag		if (getParent() instanceof DataViewTag) {			DataViewTag par = (DataViewTag) getParent();			par.setTpl(tb.toString());		} else if (getParent() instanceof ColorPaletteTag) {			ColorPaletteTag par = (ColorPaletteTag) getParent();			par.setTpl(tb.toString());		} else if (getParent() instanceof ComboBoxTag) {			ComboBoxTag par = (ComboBoxTag) getParent();			par.setTpl(tb.toString());		} else {			try {				pageContext.getResponse().getWriter().print(id + "=" + tb.toString() + ";");			} catch (IOException e) {			}		}		clear();		return EVAL_PAGE;	}		@Override	protected void clear() {		id = null;	}}