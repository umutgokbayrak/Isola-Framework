package isola.tags.ext.helpers;import java.util.HashMap;import java.util.Locale;import java.util.Map;import javax.servlet.http.HttpServletRequest;import javax.servlet.jsp.JspException;import javax.servlet.jsp.JspTagException;import org.apache.commons.configuration.PropertiesConfiguration;import isola.helpers.TemplateHelper;import isola.tags.base.BaseTag;/** *  * All pages must begin with this tag *  *  *  * @author Umut Gokbayrak */public class InitTag extends BaseTag {	private static final long serialVersionUID = -1108346556997354229L;	private String theme;	private String jsPath;	private String cssPath;	private String lang;	private static PropertiesConfiguration config;	static {		try {			config = new PropertiesConfiguration("isola.properties");		} catch (Exception e) {}	}	private void readPaths() {		if (config != null) {			if (jsPath == null || jsPath.trim().equals("")) {				jsPath = config.getString("static.path.js");			}			if (cssPath == null || cssPath.trim().equals("")) {				cssPath = config.getString("static.path.css");			}		}		String contextRoot = ((HttpServletRequest) pageContext.getRequest()).getContextPath();		if (cssPath == null || cssPath.trim().equals("")) {			cssPath = contextRoot + "/isola/css";		}		if (jsPath == null || jsPath.trim().equals("")) {			jsPath = contextRoot + "/isola/js";		}	}		public int doEndTag() throws JspException {		try {			Map<String, Object> dataMap = new HashMap<String, Object>();			if (theme == null || theme.trim().equals("")) {				theme = "gray";			} else if (theme != null && theme.equals("aqua")) {				theme = null;			}			readPaths();			if (lang == null) {				lang = "tr";			}			if (lang.indexOf("_") > 0) {				lang = lang.substring(0, lang.indexOf("_")).toLowerCase(Locale.ENGLISH) + lang.substring(lang.indexOf("_"));			} else {				lang = lang.toLowerCase(Locale.ENGLISH);			}			dataMap.put("jsPath", jsPath);			dataMap.put("cssPath", cssPath);			dataMap.put("theme", theme);			dataMap.put("lang", lang);			String contextRoot = ((HttpServletRequest) pageContext.getRequest()).getContextPath();			dataMap.put("contextRoot", contextRoot);			// set the jsPath to the session			((HttpServletRequest) pageContext.getRequest()).getSession().setAttribute("jsPath", jsPath);			((HttpServletRequest) pageContext.getRequest()).getSession().setAttribute("contextRoot", contextRoot);			TemplateHelper merger = new TemplateHelper(templatePath + "/ext/Init.ftl", dataMap);			String result = merger.merge();			pageContext.getOut().write(result);		} catch (Exception e) {			throw new JspTagException("Error: " + e.getMessage());		} finally {			clear();		}		return EVAL_PAGE;	}		@Override	public void clear() {		theme = jsPath = cssPath = null;	}		public void setTheme(String theme) {		this.theme = theme;	}		public void setJsPath(String jsPath) {		this.jsPath = jsPath;	}		public void setCssPath(String cssPath) {		this.cssPath = cssPath;	}		public void setLang(String lang) {		this.lang = lang;	}}