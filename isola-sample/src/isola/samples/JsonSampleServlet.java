package isola.samples;import isola.utility.Utility;import java.io.IOException;import java.io.PrintWriter;import java.util.ArrayList;import java.util.Enumeration;import java.util.HashMap;import java.util.List;import java.util.Properties;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import net.arnx.jsonic.JSON;public class JsonSampleServlet extends HttpServlet {	private static final long serialVersionUID = 5482000412240243524L;		public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {		response.setHeader("Expires", "-1");		response.setHeader("Pragma", "no-cache");		response.setHeader("Cache-control", "no-cache");		response.setHeader("Content-Type", "text/html; charset=utf-8");		PrintWriter out = response.getWriter();		String action = request.getParameter("action");		if (action == null || action.equals("")) {			action = "env";		}		if (action.equals("env")) {			Properties props = System.getProperties();			List<SampleItem> output = new ArrayList<SampleItem>();			Enumeration<Object> en = props.keys();			String tmp = null;			while (en.hasMoreElements()) {				tmp = (String) en.nextElement();				output.add(new SampleItem(Utility.htmlSpecialChars(tmp), Utility.htmlSpecialChars(props.getProperty(tmp))));			}			HashMap<String, Object> result = new HashMap<String, Object>();			result.put("result", output);			result.put("total", output.size());			String encodedStr = JSON.encode(result, false);			out.print(encodedStr);		}	}		public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {		doPost(request, response);	}}