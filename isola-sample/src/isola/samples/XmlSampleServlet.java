package isola.samples;import isola.utility.Utility;import java.io.IOException;import java.io.PrintWriter;import java.util.Enumeration;import java.util.Properties;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;public class XmlSampleServlet extends HttpServlet {	static final long serialVersionUID = 1L;		/*	 * 	 * (non-Java-doc)	 * 	 * 	 * 	 * @see javax.servlet.http.HttpServlet#HttpServlet()	 */	public XmlSampleServlet() {		super();	}		/*	 * 	 * (non-Java-doc)	 * 	 * 	 * 	 * @see javax.servlet.http.HttpServlet#doGet(HttpServletRequest request,	 * 	 * HttpServletResponse response)	 */	public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {		response.setHeader("Expires", "-1");		response.setHeader("Pragma", "no-cache");		response.setHeader("Cache-control", "no-cache");		response.setHeader("Content-Type", "text/xml; charset=utf-8");		PrintWriter out = response.getWriter();		out.write("<?xml version=\"1.0\" encoding=\"utf-8\"?>");		out.write("<data>");		String action = request.getParameter("action");		if (action == null || action.equals("")) {			action = "env";		}		if (action.equals("env")) {			out.print("<environment>");			Properties props = System.getProperties();			Enumeration<?> en = props.keys();			String tmp = null;			while (en.hasMoreElements()) {				tmp = (String) en.nextElement();				out.print("<property>");				out.print("<name>" + Utility.htmlSpecialChars(tmp) + "</name>");				out.print("<value>" + Utility.htmlSpecialChars(props.getProperty(tmp)) + "</value>");				out.print("</property>");			}			out.print("</environment>");		} else if (action.equals("system")) {			Runtime rt = Runtime.getRuntime();			out.print("<system>");			out.print("<free-memory>" + rt.freeMemory() + "</free-memory>");			out.print("<available-processors>" + rt.availableProcessors() + "</available-processors>");			out.print("<max-memory>" + rt.maxMemory() + "</max-memory>");			out.print("<total-memory>" + rt.totalMemory() + "</total-memory>");			out.print("</system>");		}		out.write("</data>");	}		/*	 * 	 * (non-Java-doc)	 * 	 * 	 * 	 * @see javax.servlet.http.HttpServlet#doPost(HttpServletRequest request,	 * 	 * HttpServletResponse response)	 */	public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {		doGet(request, response);	}}